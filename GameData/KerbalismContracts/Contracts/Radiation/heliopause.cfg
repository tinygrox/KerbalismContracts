CONTRACT_TYPE:NEEDS[FeatureRadiation]
{
  name = KerbalismContracts_LeaveSolarSystem
  agent = Kerbalism
  group = Kerbalism
  title = #KerbalismContracts_LeaveSolarSystem_title//Leave the heliosphere
  description = #KerbalismContracts_LeaveSolarSystem_desc//We've reached moons, we went to other planets, now it's time to go interstellar.
  synopsis = #KerbalismContracts_LeaveSolarSystem_synopsis//Leave the heliosphere
  completedMessage = #KerbalismContracts_LeaveSolarSystem_completed//We've officially reached interstellar space!
  minExpiry = 600.0
  maxExpiry = 20000.0
  deadline = 84000.0
  prestige = Exceptional
  maxCompletions = 1
  maxSimultaneous = 1
  rewardScience = 45
  rewardReputation = 35
  rewardFunds = 225000
  failureFunds = 60000
  failureReputation = 15

  targetBody = AllBodies().Where(cb => cb.IsSun()).First()

  REQUIREMENT
  {
    name = OrbitJool
    type = Orbit
    targetBody = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
  }

  PARAMETER
  {
    name = CompleteContract
    type = VesselParameterGroup
    title = #KerbalismContracts_LeaveSolarSystem_PARAMETER//Retrieve a radiation scan from outside the heliosphere

    PARAMETER
    {
      name = RadiationField
      type = RadiationField
      title = #KerbalismContracts_LeaveSolarSystem_synopsis//Leave the heliosphere
      field = MAGNETOPAUSE
      stay_out = true
      targetBody = AllBodies().Where(cb => cb.IsSun()).First()
    }

    PARAMETER
    {
      name = ExperimentDone
      type = ExperimentDone
      title = #KerbalismContracts_LeaveSolarSystem_PARAMETER2//Transmit a radiation scan
      experiment = geigerCounter
      completeInSequence = true
      biome = SpaceHigh
      targetBody = AllBodies().Where(cb => cb.IsSun()).First()
    }
  }

  BEHAVIOUR
  {
    name = ShowBelt
    type = ShowRadiationField
    field = MAGNETOPAUSE
  }
}
